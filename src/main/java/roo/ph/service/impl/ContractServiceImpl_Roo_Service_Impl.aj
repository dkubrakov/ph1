// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package roo.ph.service.impl;

import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import roo.ph.domain.Author;
import roo.ph.domain.Contract;
import roo.ph.domain.Employer;
import roo.ph.repository.ContractRepository;
import roo.ph.service.impl.ContractServiceImpl;

privileged aspect ContractServiceImpl_Roo_Service_Impl {
    
    declare @type: ContractServiceImpl: @Service;
    
    declare @type: ContractServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ContractRepository ContractServiceImpl.contractRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param contractRepository
     */
    @Autowired
    public ContractServiceImpl.new(ContractRepository contractRepository) {
        setContractRepository(contractRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return ContractRepository
     */
    public ContractRepository ContractServiceImpl.getContractRepository() {
        return contractRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param contractRepository
     */
    public void ContractServiceImpl.setContractRepository(ContractRepository contractRepository) {
        this.contractRepository = contractRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param contract
     * @return Map
     */
    public Map<String, List<MessageI18n>> ContractServiceImpl.validate(Contract contract) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param contract
     */
    @Transactional
    public void ContractServiceImpl.delete(Contract contract) {
        // Clear bidirectional many-to-one child relationship with Author
        if (contract.getAuthor() != null) {
            contract.getAuthor().getContracts().remove(contract);
        }
        
        // Clear bidirectional many-to-one child relationship with Employer
        if (contract.getEmployer() != null) {
            contract.getEmployer().getContracts().remove(contract);
        }
        
        getContractRepository().delete(contract);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Contract> ContractServiceImpl.save(Iterable<Contract> entities) {
        return getContractRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void ContractServiceImpl.delete(Iterable<Long> ids) {
        List<Contract> toDelete = getContractRepository().findAll(ids);
        getContractRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Contract
     */
    @Transactional
    public Contract ContractServiceImpl.save(Contract entity) {
        return getContractRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Contract
     */
    public Contract ContractServiceImpl.findOne(Long id) {
        return getContractRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Contract
     */
    public Contract ContractServiceImpl.findOneForUpdate(Long id) {
        return getContractRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Contract> ContractServiceImpl.findAll(Iterable<Long> ids) {
        return getContractRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Contract> ContractServiceImpl.findAll() {
        return getContractRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long ContractServiceImpl.count() {
        return getContractRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Contract> ContractServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getContractRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Contract> ContractServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getContractRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param author
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Contract> ContractServiceImpl.findByAuthor(Author author, GlobalSearch globalSearch, Pageable pageable) {
        return getContractRepository().findByAuthor(author, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param employer
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Contract> ContractServiceImpl.findByEmployer(Employer employer, GlobalSearch globalSearch, Pageable pageable) {
        return getContractRepository().findByEmployer(employer, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param author
     * @return Long
     */
    public long ContractServiceImpl.countByAuthor(Author author) {
        return getContractRepository().countByAuthor(author);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param employer
     * @return Long
     */
    public long ContractServiceImpl.countByEmployer(Employer employer) {
        return getContractRepository().countByEmployer(employer);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Contract> ContractServiceImpl.getEntityType() {
        return Contract.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> ContractServiceImpl.getIdType() {
        return Long.class;
    }
    
}
