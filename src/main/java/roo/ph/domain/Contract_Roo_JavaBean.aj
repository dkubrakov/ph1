// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package roo.ph.domain;

import java.math.BigDecimal;
import java.util.Objects;
import roo.ph.domain.Author;
import roo.ph.domain.Contract;
import roo.ph.domain.Employer;

privileged aspect Contract_Roo_JavaBean {
    
    /**
     * Gets id value
     * 
     * @return Long
     */
    public Long Contract.getId() {
        return this.id;
    }
    
    /**
     * Sets id value
     * 
     * @param id
     * @return Contract
     */
    public Contract Contract.setId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets version value
     * 
     * @return Integer
     */
    public Integer Contract.getVersion() {
        return this.version;
    }
    
    /**
     * Sets version value
     * 
     * @param version
     * @return Contract
     */
    public Contract Contract.setVersion(Integer version) {
        this.version = version;
        return this;
    }
    
    /**
     * Gets salary value
     * 
     * @return BigDecimal
     */
    public BigDecimal Contract.getSalary() {
        return this.salary;
    }
    
    /**
     * Sets salary value
     * 
     * @param salary
     * @return Contract
     */
    public Contract Contract.setSalary(BigDecimal salary) {
        this.salary = salary;
        return this;
    }
    
    /**
     * Gets author value
     * 
     * @return Author
     */
    public Author Contract.getAuthor() {
        return this.author;
    }
    
    /**
     * Sets author value
     * 
     * @param author
     * @return Contract
     */
    public Contract Contract.setAuthor(Author author) {
        this.author = author;
        return this;
    }
    
    /**
     * Gets employer value
     * 
     * @return Employer
     */
    public Employer Contract.getEmployer() {
        return this.employer;
    }
    
    /**
     * Sets employer value
     * 
     * @param employer
     * @return Contract
     */
    public Contract Contract.setEmployer(Employer employer) {
        this.employer = employer;
        return this;
    }
    
    /**
     * This `equals` implementation is specific for JPA entities and uses 
     * the entity identifier for it, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @param obj
     * @return Boolean
     */
    public boolean Contract.equals(Object obj) {
        if (this == obj) {
            return true;
        }
        // instanceof is false if the instance is null
        if (!(obj instanceof Contract)) {
            return false;
        }
        return getId() != null && Objects.equals(getId(), ((Contract) obj).getId());
    }
    
    /**
     * This `hashCode` implementation is specific for JPA entities and uses a fixed `int` value to be able 
     * to identify the entity in collections after a new id is assigned to the entity, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @return Integer
     */
    public int Contract.hashCode() {
        return 31;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return String
     */
    public String Contract.toString() {
        return "Contract {" + 
                "id='" + id + '\'' + 
                ", version='" + version + '\'' + 
                ", salary='" + salary + '\'' + "}" + super.toString();
    }
    
}
