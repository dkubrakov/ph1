// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package roo.ph.web;

import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;
import roo.ph.domain.Employer;
import roo.ph.service.api.EmployerService;
import roo.ph.web.EmployersItemJsonController;

privileged aspect EmployersItemJsonController_Roo_JSON {
    
    declare @type: EmployersItemJsonController: @RestController;
    
    declare @type: EmployersItemJsonController: @RequestMapping(value = "/employers/{employer}", name = "EmployersItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private EmployerService EmployersItemJsonController.employerService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param employerService
     */
    @Autowired
    public EmployersItemJsonController.new(EmployerService employerService) {
        this.employerService = employerService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return EmployerService
     */
    public EmployerService EmployersItemJsonController.getEmployerService() {
        return employerService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param employerService
     */
    public void EmployersItemJsonController.setEmployerService(EmployerService employerService) {
        this.employerService = employerService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Employer
     */
    @ModelAttribute
    public Employer EmployersItemJsonController.getEmployer(@PathVariable("employer") Long id) {
        Employer employer = employerService.findOne(id);
        if (employer == null) {
            throw new NotFoundException(String.format("Employer with identifier '%s' not found",id));
        }
        return employer;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param employer
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> EmployersItemJsonController.show(@ModelAttribute Employer employer) {
        return ResponseEntity.ok(employer);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param employer
     * @return UriComponents
     */
    public static UriComponents EmployersItemJsonController.showURI(Employer employer) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(EmployersItemJsonController.class).show(employer))
            .buildAndExpand(employer.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedEmployer
     * @param employer
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> EmployersItemJsonController.update(@ModelAttribute Employer storedEmployer, @Valid @RequestBody Employer employer, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        employer.setId(storedEmployer.getId());
        getEmployerService().save(employer);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param employer
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> EmployersItemJsonController.delete(@ModelAttribute Employer employer) {
        getEmployerService().delete(employer);
        return ResponseEntity.ok().build();
    }
    
}
