// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package roo.ph.web;

import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;
import roo.ph.domain.Contract;
import roo.ph.service.api.ContractService;
import roo.ph.web.ContractsItemJsonController;

privileged aspect ContractsItemJsonController_Roo_JSON {
    
    declare @type: ContractsItemJsonController: @RestController;
    
    declare @type: ContractsItemJsonController: @RequestMapping(value = "/contracts/{contract}", name = "ContractsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ContractService ContractsItemJsonController.contractService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param contractService
     */
    @Autowired
    public ContractsItemJsonController.new(ContractService contractService) {
        this.contractService = contractService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return ContractService
     */
    public ContractService ContractsItemJsonController.getContractService() {
        return contractService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param contractService
     */
    public void ContractsItemJsonController.setContractService(ContractService contractService) {
        this.contractService = contractService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Contract
     */
    @ModelAttribute
    public Contract ContractsItemJsonController.getContract(@PathVariable("contract") Long id) {
        Contract contract = contractService.findOne(id);
        if (contract == null) {
            throw new NotFoundException(String.format("Contract with identifier '%s' not found",id));
        }
        return contract;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param contract
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> ContractsItemJsonController.show(@ModelAttribute Contract contract) {
        return ResponseEntity.ok(contract);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param contract
     * @return UriComponents
     */
    public static UriComponents ContractsItemJsonController.showURI(Contract contract) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(ContractsItemJsonController.class).show(contract))
            .buildAndExpand(contract.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedContract
     * @param contract
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> ContractsItemJsonController.update(@ModelAttribute Contract storedContract, @Valid @RequestBody Contract contract, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        contract.setId(storedContract.getId());
        getContractService().save(contract);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param contract
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> ContractsItemJsonController.delete(@ModelAttribute Contract contract) {
        getContractService().delete(contract);
        return ResponseEntity.ok().build();
    }
    
}
